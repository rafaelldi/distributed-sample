version: "3.8"

configs:
  collector_config:
    file: ./collector.yaml

x-common-environment:
  &common-environment
  OTEL_EXPORTER_OTLP_ENDPOINT: http://collector:4317

services:
  rabbitmq:
    container_name: rabbitmq
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    healthcheck:
      test: rabbitmq-diagnostics -q ping
      interval: 5s
      timeout: 10s
      retries: 5

  api:
    container_name: api
    build:
      context: .
      dockerfile: api/Dockerfile
    ports:
      - "5000:80"
    environment:
      <<: *common-environment
      ASPNETCORE_ENVIRONMENT: Development
    depends_on:
      rabbitmq:
        condition: service_healthy

  worker:
    container_name: worker
    build:
      context: .
      dockerfile: worker/Dockerfile
    environment:
      <<: *common-environment
      DOTNET_ENVIRONMENT: Development
    depends_on:
      rabbitmq:
        condition: service_healthy
      postgres:
        condition: service_healthy

  postgres:
    container_name: postgres
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=my-database
    ports:
      - "5432:5432"
    volumes:
      - db:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 5s
      timeout: 10s
      retries: 5

  collector:
    container_name: collector
    image: otel/opentelemetry-collector-contrib:0.66.0
    command: [ "--config=/etc/otel-collector-config.yaml" ]
    configs:
      - source: collector_config
        target: /etc/otel-collector-config.yaml

volumes:
  db:
    driver: local